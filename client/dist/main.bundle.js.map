{"version":3,"sources":["webpack:///webpack/bootstrap 2ad35cae27f23e6f950e","webpack:///./src/main.js","webpack:///./src/styles/main.less?a433"],"names":["require","ws","WebSocket","onopen","console","log","send","onmessage","ev"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,oBAAAA,CAAQ,CAAR;;AAEA,KAAIC,KAAK,IAAIC,SAAJ,CAAc,qBAAd,CAAT;AACA;AACAD,IAAGE,MAAH,GAAY,YAAY;AACvBC,UAAQC,GAAR,CAAY,4BAAZ;AACA;AACAJ,KAAGK,IAAH,CAAQ,WAAR;AACA,EAJD;AAKA;AACAL,IAAGM,SAAH,GAAe,UAAUC,EAAV,EAAc;AAC5BJ,UAAQC,GAAR,CAAYG,EAAZ;AACA,EAFD,C;;;;;;ACVA,0C","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ad35cae27f23e6f950e","require(\"./styles/main.less\");\r\n\r\nlet ws = new WebSocket('ws://localhost:3000');\r\n// event emmited when connected\r\nws.onopen = function () {\r\n\tconsole.log('websocket is connected ...')\r\n\t// sending a send event to websocket server\r\n\tws.send('connected')\r\n}\r\n// event emmited when receiving message \r\nws.onmessage = function (ev) {\r\n\tconsole.log(ev);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.less\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}